---
- hosts: servers
  become: true
  become_user: root
  vars:
    docker_compose_version: "1.28.5"
  tasks:
    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Upgrade all packages on servers
      apt: upgrade=dist force_apt_get=yes

    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no

    - name: Reboot the box if kernel updated
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists

    - name: Install dependencies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - gnupg-agent

    # DOCKER INSTALLATION
    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Add user to docker group
      user:
        name: "{{ansible_user}}"
        group: docker

    - name: Download docker-compose {{ docker_compose_version }}
      get_url:
        url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
        dest: ~/docker-compose
        mode: "+x"

    - name: Check docker-compose exists
      stat: path=~/docker-compose
      register: docker_compose

    - name: Move docker-compose to /usr/local/bin/docker-compose
      command: mv ~/docker-compose /usr/local/bin/docker-compose
      when: docker_compose.stat.exists

    # REQUIRED PACKAGES FOR USING ANSIBLE DOCKER (for portainer installation below)
    - name: Install related Ubuntu packages
      apt:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - python3-pip
          - mc

    - name: Install python packages
      pip:
        name: docker

    # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_container_module.html#ansible-collections-community-docker-docker-container-module
    - name: Create portainer container
      docker_container:
        name: portainer
        image: portainer/portainer-ce
        state: started
        recreate: yes
        restart_policy: always
        published_ports:
          - "8000:8000"
          - "9000:9000"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data

    # FIREWALL SETUP
    - name: Open Portainer port
      ufw:
        state: enabled
        rule: allow
        port: "9000"
        proto: tcp

    - name: Open SSH port
      ufw:
        state: enabled
        rule: allow
        port: "22"
        proto: tcp            
